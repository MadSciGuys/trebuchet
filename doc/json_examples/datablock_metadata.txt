# This DataBlock JSON object is missing the "datablock_records" field, which is a valid response from /datablock/:datablock_id/metadata
{
    # Each top-level JSON object has a type.
    "type": "datablock",
    # DataBlocks are uniquely identified by an ID.
    "datablock_id": "18",
    # Each DataBlock has a list of fields.
    "datablock_fields": [
        {
            "type": "datablock_field"

            # Each field has a name, unique amongst the field names in this Datablock.
            "datablock_field_name": "START_TIME",

            # Each field has a type, whis is one of: int, real, string, binary, vector, or date_time
            "datablock_field_type": "int",

            # Each field is optionally indexed. This can be decided by users uploading a new DataBlock
            # or by Data Pipeline code. When a field is not indexed, filtering on it becomes O(n) in time complexity.
            # We may later need to discuss mechanisms for enabling this while filtering.
            "datablock_field_indexed": false,
        },
        {
            "type": "datablock_field"
            "datablock_field_name": "GMP",

            # Vector field types are represented as a JSON object like so.
            "datablock_field_type": {
                "vector_size": 21,
                "vector": {
                    "vector_size": 6,
                    "vector": "string"
                }
            },
            "datablock_field_indexed": false,
        },
        {
            "type": "datablock_field"
            "datablock_field_name": "SITE",
            "datablock_field_type": "real",
            "datablock_field_indexed": false,
        },
        {
            "type": "datablock_field"
            "datablock_field_name": "pH",
            "datablock_field_type": {
                "vector_size": 92,
                "vector": {
                    "vector_size": 2,
                    "vector": "real"
                }
            },
            "datablock_field_indexed": false,
        },
        {
            "type": "datablock_field"
            "datablock_field_name": "Storage Conditions",
            "datablock_field_type": "real",
            "datablock_field_indexed": true,
        },
        {
            "type": "datablock_field"
            "datablock_field_name": "A280",
            "datablock_field_type": {
                # Binary field types specify the MIME type of the binary data of the field.
                "binary": "image/png"
            },
            "datablock_field_indexed": true,
        },
        {
            "type": "datablock_field"
            "datablock_field_name": "END_TIME",
            "datablock_field_type": {
                # Binary field types can contain null instead of a MIME type, implying that the MIME type is unknown.
                # This could be because none of the records had a guessable MIME type or that there were conflicting
                # results when guessing.
                "binary": null
            },
            "datablock_field_indexed": false,
        },
        {
            "type": "datablock_field"
            "datablock_field_name": "GTP",
            "datablock_field_type": {
                "vector_size": 20,
                "vector": {
                    "vector_size": 53,
                    "vector": "string"
                }
            },
            "datablock_field_indexed": false,
        },
        {
            "type": "datablock_field"
            "datablock_field_name": "VAULTID",
            "datablock_field_type": "string",
            "datablock_field_indexed": false,
        },
        {
            "type": "datablock_field"
            "datablock_field_name": "Barcode",
            "datablock_field_type": "string",
            "datablock_field_indexed": false,
        }
    ],
    # The record count should always be present.
    "datablock_record_count": 14,
    "datablock_source": {
        "type": "datablock_source"

        # The DataBlock source can be any of: api_user, api_job, or data_pipeline
        "datablock_source_type": "api_user",

        # When the DataBlock source is an API User, this object contains a username.
        # This user is also the owner of the DataBlock and has permission to update or delete this DataBlock.
        "datablock_source_username": "tek",
    },
    "datablock_name": {
        "type": "datablock_name",

        # A DataBlock name can be any of: ad_hoc, alias, job_result, or recipe
        "datablock_name_type": "job_result"

        # When the DataBlock name is a Job Result, this object contains a user-specified name
        # and a uniquely generated Job ID.
        "datablock_name_text": "Proto-Analysis Stupifying Tylenol Spectrogram",
        "datablock_name_job_id": "\"48992\"",
    }
}
